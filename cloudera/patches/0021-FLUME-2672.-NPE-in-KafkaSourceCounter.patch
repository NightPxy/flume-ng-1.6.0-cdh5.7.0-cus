From 0b916598b0c4bbef9efdd289b8bacedb1e5ba15c Mon Sep 17 00:00:00 2001
From: Johny Rufus <johnyrufus@apache.org>
Date: Tue, 15 Sep 2015 18:35:28 -0700
Subject: [PATCH 21/37] FLUME-2672. NPE in KafkaSourceCounter

(Rigo MacTaggart via Johny Rufus)
---
 .../instrumentation/kafka/KafkaSourceCounter.java  |    2 +-
 .../kafka/KafkaSourceCounterTest.java              |   63 ++++++++++++++++++++
 2 files changed, 64 insertions(+), 1 deletion(-)
 create mode 100644 flume-ng-core/src/test/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounterTest.java

diff --git a/flume-ng-core/src/main/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounter.java b/flume-ng-core/src/main/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounter.java
index 1cb911d..ad0ba2c 100644
--- a/flume-ng-core/src/main/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounter.java
+++ b/flume-ng-core/src/main/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounter.java
@@ -31,7 +31,7 @@ public class KafkaSourceCounter extends SourceCounter implements  KafkaSourceCou
       "source.kafka.empty.count";
 
   private static final String[] ATTRIBUTES =
-      {TIMER_KAFKA_COMMIT, TIMER_KAFKA_EVENT_GET};
+      {TIMER_KAFKA_COMMIT, TIMER_KAFKA_EVENT_GET, COUNTER_KAFKA_EMPTY};
 
   public KafkaSourceCounter(String name) {
     super(name, ATTRIBUTES);
diff --git a/flume-ng-core/src/test/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounterTest.java b/flume-ng-core/src/test/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounterTest.java
new file mode 100644
index 0000000..4a71265
--- /dev/null
+++ b/flume-ng-core/src/test/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounterTest.java
@@ -0,0 +1,63 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.flume.instrumentation.kafka;
+
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class KafkaSourceCounterTest {
+
+    KafkaSourceCounter counter;
+
+    @Before
+    public void setUp() throws Exception {
+        counter = new KafkaSourceCounter("test");
+    }
+
+    @Test
+    public void testAddToKafkaEventGetTimer() throws Exception {
+        Assert.assertEquals(1L, counter.addToKafkaEventGetTimer(1L));
+    }
+
+    @Test
+    public void testAddToKafkaCommitTimer() throws Exception {
+        Assert.assertEquals(1L, counter.addToKafkaCommitTimer(1L));
+    }
+
+    @Test
+    public void testIncrementKafkaEmptyCount() throws Exception {
+        Assert.assertEquals(1L, counter.incrementKafkaEmptyCount());
+    }
+
+    @Test
+    public void testGetKafkaCommitTimer() throws Exception {
+        Assert.assertEquals(0, counter.getKafkaCommitTimer());
+    }
+
+    @Test
+    public void testGetKafkaEventGetTimer() throws Exception {
+        Assert.assertEquals(0, counter.getKafkaEventGetTimer());
+    }
+
+    @Test
+    public void testGetKafkaEmptyCount() throws Exception {
+        Assert.assertEquals(0, counter.getKafkaEmptyCount());
+    }
+
+}
\ No newline at end of file
-- 
1.7.9.5

